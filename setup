#!/bin/bash
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR
IFS=$'\n\t'

# Install any packages we want
pacman-key --init
pacman-key --populate archlinuxarm
pacman -Syu --noconfirm vim bash-completion zsh grml-zsh-config sudo avahi nss-mdns wpa_supplicant termite-terminfo

# Update the hostname
echo discordAnnouncher > /etc/hostname

# Configure sudo
echo '%wheel ALL=(ALL) ALL' >> /etc/sudoers.d/wheel

# Install zero-conf to make the pi easier to find on the network
sed -i '/^hosts: /s/files dns/files mdns dns/' /etc/nsswitch.conf
ln -sf /usr/lib/systemd/system/avahi-daemon.service /etc/systemd/system/multi-user.target.wants/avahi-daemon.service

# Enable wireless, actual connection details will be configured by the user, likely over usb-serial.
# No not put any secrets like wifi passphrases in here as they will be publicly exposed in the repository and image.

#Adding wifi
pacman -S --noconfirm wpa_supplicant ifplugd crda dialog netctl
echo 'write wifi'
cat << EOF >> /etc/netctl/wlan0-network
Description='Test Wifi'
Interface=wlan0
Connection=wireless
Security=wpa
ESSID=YOURSSID
IP=dhcp
Key=YOURPASS
EOF
echo 'start wfi'


#netctl enable wlan0-network


#Adding ssh server
pacman --noconfirm -S openssh
echo 'link ssh'
ln -sf /usr/lib/systemd/system/sshd.service /etc/systemd/system/multi-user.target.wants/sshd.service

#ln -sf /usr/lib/systemd/system/wpa_supplicant@.service /etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service

ln -sf /usr/lib/systemd/system/netctl-auto@.service /etc/systemd/system/multi-user.target.wants/netctl-auto@wlan0.service
#ln -sf /usr/lib/systemd/system/netctl-ifplugd@.service /etc/systemd/system/multi-user.target.wants/netctl-ifplugd@eth0.service

# Enable the usb serial, this will make it easier to add any wifi credentials on the pi zero (will not work on other models).
grep 'dtoverlay=dwc2' /boot/config.txt >/dev/null || echo 'dtoverlay=dwc2' >> /boot/config.txt
grep 'modules-load=dwc2,g_serial' /boot/cmdline.txt >/dev/null || sed -i 's/.*rootwait.*/& modules-load=dwc2,g_serial/' /boot/cmdline.txt
ln -sf /usr/lib/systemd/system/getty@ttyGS0.service /etc/systemd/system/getty.target.wants/getty@ttyGS0.service

# Enable hardware pwm
grep 'dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4' /boot/config.txt >/dev/null || echo 'dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4' >> /boot/config.txt

#Enable spi
grep 'device_tree_param=spi=on' /boot/config.txt >/dev/null || echo 'device_tree_param=spi=on' >> /boot/config.txt

# Set zsh as the default shell for root and alarm
chsh -s /usr/bin/zsh root
touch /root/.zshrc
userdel alarm
echo root:nrootpasswd | chpasswd 
useradd -m -G wheel -s /usr/bin/zsh discordannoucer
echo discordannoucer:discordannoucer | chpasswd 

#install dependants for discord bot scripts
pacman --noconfirm -S base-devel git python3 python-pip python-setuptools yajl python-pillow python-dotenv tmux

su discordannoucer -c 'git clone https://aur.archlinux.org/python-raspberry-gpio.git /home/discordannoucer/python-raspberry-gpio'



cd /home/discordannoucer/python-raspberry-gpio && su discordannoucer -c 'makepkg -si --noconfirm' && cd /home/discordannoucer

pip3 install discord spidev
echo "cloning weebs"

cat << EOF >> /home/discordannoucer/startupdiscord
#!/bin/zsh

ls /home/discordannoucer/ | grep WeebBot > /dev/null

# check output of the previous command
if [ $? -eq 0 ]
then
     echo -e "Found file"
     git pull https://github.com/subzerodev/WeebBot.git
else
     echo -e "File is not in there"
     git clone https://github.com/subzerodev/WeebBot.git
fi


# Check for the file
ls /boot/ | grep apikey > /dev/null

# check output of the previous command
if [ $? -eq 0 ]
then
     echo -e "Found file"
    mv /boot/apikey /home/discordannoucer/WeebBot/.env
else
     echo -e "File is not in there"
fi

# Check for the file
ls /boot/ | grep wifikey > /dev/null

# check output of the previous command
if [ $? -eq 0 ]
then
     echo -e "Found file"
    mv /boot/wifikey /etc/netctl/wlan0-network
else
     echo -e "File is not in there"
fi

netctl reenable wlan0-network

tmux new -s discord -d

tmux send-keys -t 'discord' 'python3 /home/discordannoucer/WeebBot/indicator.py' C-m
EOF

echo "weeb perms"
chmod 755 /home/discordannoucer/startupdiscord

echo 'Doing startup scripts'
cat << EOF >> /etc/systemd/system/startupdiscord.service
[Unit]
Description='Checks boot wifi creds and bot'

[Service]
ExecStart=/home/discordannoucer/startupdiscord

[Install]
WantedBy=multi-user.target 
EOF

ln -sf /etc/systemd/system/startupdiscord.service /etc/systemd/system/multi-user.target.wants/startupdiscord.service



echo ' Done '
